# This is a basic workflow to help you get started with Actions
name: Blue-Green-strategy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACR_REPO_NAME: kkmee0209/blue-nginx
  ARTIFACT_NAME: blue-nginx
  RESOURCE_GROUP: kmtest
  AKS_CLUSTER_NAME: kmtestaks
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployapp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2      

      # This action can be used to set cluster context before other actions like azure/k8s-deploy, azure/k8s-create-secret or any kubectl commands (in script) can be run subsequently in the workflow.
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'

      - name: Deploy app
        uses: azure/k8s-deploy@v1.3
        with:
          namespace: default
          manifests: |
            service.yaml
            blue-deploy.yaml
          strategy: blue-green
          route-method: service
          action: deploy  #deploy is the default; we will later use this to promote/reject

  # approveapp:
  #   runs-on: ubuntu-latest
  #   needs: deployapp
  #   environment: akspromotion
  #   steps:
  #     - run: echo asked for approval
      
  # promotereject:
  #   runs-on: ubuntu-latest
  #   needs: approveapp
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Azure login
  #       id: login
  #       uses: azure/login@v1.4.3
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Set AKS context
  #       id: set-context
  #       uses: azure/aks-set-context@v3
  #       with:
  #         resource-group: '${{ secrets.resource_group }}' 
  #         cluster-name: '${{ secrets.cluster_name }}'
                   
  #     - name: Promote App
  #       uses: azure/k8s-deploy@v1.3
  #       if: ${{ success() }}
  #       with:
  #         manifests: |
  #           green-deploy.yaml
  #           service.yaml
  #           ingress.yaml
  #         strategy: blue-green
  #         action: promote  #deploy is the default; we will later use this to promote/reject

  #     - name: Reject App
  #       uses: azure/k8s-deploy@v1.3
  #       if: ${{ failure() }}
  #       with:
  #         manifests: |
  #            blue-deploy.yaml
  #            service.yaml
  #            ingress.yaml
  #         strategy: blue-green
  #         action: reject  #deploy is the default; we will later use this to promote/reject

      
      # Deploy
      # - name: Deploy app
      #   uses: Azure/k8s-deploy@v5
      #   with:
      #      manifests: |
      #         green-deploy.yaml
      #         service.yaml
      #         ingress.yaml
      #      strategy: blue-green
      #      action: deploy
      #      route-method: service # substitute with service/smi as per need
      #      version-switch-buffer: 1
